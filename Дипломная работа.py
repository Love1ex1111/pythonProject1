import telebot
from telebot import types
import random
import webbrowser

answers = ['–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞–∑–∞—Ç—å.', '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.', '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.',
           '–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏... >_<']

USERS_STATES = dict()

USERS_STATISTIC = dict()

USERS_RATING = dict()

dictionary = {
    1: "–î—É–º–∞—é, –¥–∞",
    2: "–î—É–º–∞—é, –Ω–µ—Ç",
    3: "–î—É–º–∞—é, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ"
}

bot = telebot.TeleBot('')

schetchik = dict()


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("Want to Clik")
    button3 = types.KeyboardButton("üé∞ Casino")
    button4 = types.KeyboardButton('üìñ Write to the developer')
    markup.row(button1)
    markup.row(button3, button4)

    if message.text == '/start':
        bot.send_message(message.chat.id,
                         f'Hello, {message.from_user.first_name}!\nI am a clicker bot!\n–ö–æ–Ω—Ç–∞–∫—Ç –º–æ–µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞: https://t.me/Why_you_skared',
                         reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∫–∏–Ω—É–ª —Ç–µ–±—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é! –í—ã–±–∏—Ä–∞–π!', reply_markup=markup)


@bot.message_handler()
def info(message):
    if message.text == "Want to Clik":
        clikChapter(message)
    elif message.text == "See balance":
        balanceChapter(message)
    elif message.text == "üé∞ Casino":
        casinoChapter(message)
    elif message.text == "Money":
        def callback_hearts(call):
            if call.data == "Money":
                global schetchik
                schetchik += 10
                bot.send_message(call.message.chat.id, 'You have clicked ' + str(schetchik) + str(' times!'))
    elif message.text == "üîπGame guess the number from 1 to 10":
        @bot.message_handler(commands=['üîπGame guess the number from 1 to 10'])
        def guess_the_number(message):
            number = random.randint(1, 10)
            USERS_STATES[message.chat.id] = {'number': number, 'attempts': 5}
            print(f'{USERS_STATES=}')
            bot.send_message(message.chat.id, '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å 5 —Ä–∞–∑.')

        @bot.message_handler(func=lambda message: message.chat.id in USERS_STATES)
        def put_the_number(message):
            user = USERS_STATES[message.chat.id]

            try:
                guess = int(message.text)

                if guess == user['number']:
                    bot.send_message(message.chat.id,
                                     '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ! '
                                     '–ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑')
                    schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 60
                    USERS_STATES.pop(message.chat.id)
                else:
                    user['attempts'] -= 1
                    if user['attempts'] > 0:
                        bot.send_message(message.chat.id, f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ((( –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {user["attempts"]}')
                    else:
                        bot.send_message(message.chat.id,
                                         '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ(( –ò –ø–æ–ø—ã—Ç–∫–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å(( –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", —á—Ç–æ–±—ã –æ—Ç—ã–≥—Ä–∞—Ç—å—Å—è')
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 30
                        USERS_STATES.pop(message.chat.id)
            except ValueError as e:
                if (USERS_STATISTIC[message.chat.id] % 3 == 0):
                    bot.send_message(message.chat.id, 'eblan??????')
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10!!!')
            except Exception as e:
                print(e)
                bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
    elif message.text == "üîπCasino game":
        def casino_game(message):
            bot.send_message(message.chat.id,
                             "–≠—Ç–æ –∏–≥—Ä–∞ –∫–∞–∑–∏–Ω–æ. –ó–¥–µ—Å—å –±–æ—Ç –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ, –∞ –≤—ã –¥–æ–ª–∂–Ω—ã —É–≥–∞–¥–∞—Ç—å —Ü–≤–µ—Ç —ç—Ç–æ–≥–æ "
                             "—á–∏—Å–ª–∞. –ß–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –¶–≤–µ—Ç–∞: –∫—Ä–∞—Å–Ω—ã–π, –±–µ–ª—ã–π, —á–µ—Ä–Ω—ã–π."
                             " –ï—Å–ª–∏ –≤—ã —É–≥–∞–¥—ã–≤–∞–µ—Ç–µ, –≤–∞–º –Ω–∞ —Å—á–µ—Ç –Ω–∞—á–∏—Å—è–ª—é—Ç—Å—è –¥–µ–Ω—å–≥–∏. –ï—Å–ª–∏ –Ω–µ —É–≥–∞–¥–∞–ª–∏, –¥–µ–Ω—å–≥–∏"
                             " —Å–æ —Å—á–µ—Ç–∞ —Å–Ω–∏–º–∞—é—Ç. –£–¥–∞—á–∏!")
            bot.send_message(message.chat.id, "–ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ. "
                                              "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –∫–∞–∫–æ–π —Ü–≤–µ—Ç —Å—Ç–∞–≤–∏—Ç–µ: –µ—Å–ª–∏ –Ω–∞ –±–µ–ª—ã–π –Ω–∞–ø–∏—à–∏—Ç–µ: 1. , "
                                              "–µ—Å–ª–∏ –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π –Ω–∞–ø–∏—à–∏—Ç–µ: 2. , "
                                              "–µ—Å–ª–∏ –Ω–∞ —á–µ—Ä–Ω—ã–π: 3. "
                                              "(–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É –ø–æ—Ç–æ–º —Ç–æ—á–∫—É, –∏–Ω–∞—á–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.)")

        @bot.message_handler(content_types=["text"])
        def get_message(message):
            list_nums = list(range(1, 101))
            random.shuffle(list_nums)
            try:
                user_guess = str(message.text)
                bot_number = random.randint(1, 100)
                white_numbers = list_nums[2::3]
                red_numbers = list_nums[1:74:3]
                black_numbers = list_nums[76::3]
                if user_guess == "1.":
                    if bot_number in white_numbers:
                        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 20
                    else:
                        bot.send_message(message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 50
                        print(bot_number)
                elif user_guess == "2.":
                    if bot_number in red_numbers:
                        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 40
                    else:
                        bot.send_message(message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 50
                        print(bot_number)
                elif user_guess == "3.":
                    if bot_number in black_numbers:
                        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
                    else:
                        bot.send_message(message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
                        schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 130
                        print(bot_number)
                else:
                    bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")
            except Exception as e:
                bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")
    elif message.text == "üîπThe bot will answer any question. Ask questions that require yes/no answers)":
        def making_decisions(message):
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')

        ball = random.randint(1, 3)
        @bot.message_handler(content_types=['text'])
        def answer(message):
            random_key = random.choice(list(dictionary.keys()))
            random_value = dictionary[random_key]
            bot.send_message(message.chat.id, random_value)
    elif message.text == "üîπGame guess which cup the ball is under":
        def ball_game(message):
            button_one = types.KeyboardButton('—Å—Ç–∞–∫–∞–Ω—á–∏–∫ 1')
            button_two = types.KeyboardButton('—Å—Ç–∞–∫–∞–Ω—á–∏–∫ 2')
            button_three = types.KeyboardButton('—Å—Ç–∞–∫–∞–Ω—á–∏–∫ 3')
            button_fore = types.KeyboardButton('Exit')
            markup = types.ReplyKeyboardMarkup(row_width=4, resize_keyboard=True)
            markup.add(button_one, button_two, button_three, button_fore)
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–∞–∫–∞–Ω—á–∏–∫–∞ –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º –Ω–∞ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –ª–µ–∂–∏—Ç —à–∞—Ä–∏–∫: ',
                             reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '—Å—Ç–∞–∫–∞–Ω—á–∏–∫ 1')
        def first(message):
            while ball == '1':
                bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π')
                schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 60
                return schetchik
            else:
                bot.send_message(message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')
                schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 35
                return schetchik

        @bot.message_handler(func=lambda message: message.text == '—Å—Ç–∞–∫–∞–Ω—á–∏–∫ 2')
        def two(message):
            while ball == '2':
                bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π')
                schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 60
                return schetchik
            else:
                bot.send_message(message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')
                schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 35
                return schetchik

        @bot.message_handler(func=lambda message: message.text == '—Å—Ç–∞–∫–∞–Ω—á–∏–∫ 3')
        def two(message):
            while ball == '3':
                bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π')
                schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 60
                return schetchik
            else:
                bot.send_message(message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')
                schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - 35
                return schetchik

        @bot.message_handler(func=lambda message: message.text == 'Exit')
        def exit(message):
            start(message)
    elif message.text == "üîπA game with a plot similar to real life.":
        def real_life(message):
            bot.send_message(message.chat.id,
                             "–≠—Ç–æ –∏–≥—Ä–∞ —Å —Å—é–∂–µ—Ç–æ–º. –ö–∞–∂–¥—ã–π –≤–∞—à –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –≤—ã–±–æ—Ä –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à—É —Å—É–¥—å–±—É. "
                             "–ù–µ –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –Ω–µ–≤–µ—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –£–¥–∞—á–∏!")
            bot.send_message(message.chat.id, "–í—ã –∑–∞–±–ª—É–¥–∏–ª–∏—Å—å –≤ –ª–µ—Å—É: ")
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            button_head_north = types.KeyboardButton("–ò–¥—Ç–∏ –Ω–∞ —Å–µ–≤–µ—Ä")
            button_head_south = types.KeyboardButton("–ò–¥—Ç–∏ –Ω–∞ —é–≥")
            markup.add(button_head_north, button_head_south)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '–ò–¥—Ç–∏ –Ω–∞ —Å–µ–≤–µ—Ä')
        def go_north(message):
            bot.send_message(message.chat.id, "–í—ã –ø–æ—à–ª–∏ –Ω–∞ —Å–µ–≤–µ—Ä, –Ω–æ —à–ª–∏ —Ç–∞–∫ –¥–æ–ª–≥–æ, —á—Ç–æ —á—É—Ç—å –Ω–µ —É–º–µ—Ä–ª–∏ –æ—Ç –∏—Å—Ç–æ—â–µ–Ω–∏—è.")
            button_st = types.KeyboardButton("–ü–æ–ø–ª—ã—Ç—å")
            button_g = types.KeyboardButton("–û–±–æ–π—Ç–∏")
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup.add(button_st, button_g)
            bot.send_message(message.chat.id, "–í—ã –ø–æ—à–ª–∏ –Ω–∞ —Å–µ–≤–µ—Ä –∏ –≤—ã—à–ª–∏ –∫ –±–æ–ª–æ—Ç—É."
                                              " –û–±–æ–π–¥–µ—Ç–µ –∏–ª–∏ —Ä–µ—à–∏—Ç–µ –ø–ª—ã—Ç—å?", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '–ü–æ–ø–ª—ã—Ç—å')
        def stay(message):
            button_one = types.KeyboardButton("–ü–æ–π—Ç–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
            button_two = types.KeyboardButton("–ü—Ä–∏–≥–Ω—É—Ç—å—Å—è –∏ —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è")
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup.add(button_one, button_two)
            bot.send_message(message.chat.id, "–í—ã –ø–æ–ø–ª—ã–ª–∏ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ —Ü–µ–Ω—Ç—Ä–µ –±–æ–ª–æ—Ç–∞,"
                                              " –ø–æ—Ç–æ–º—É —á—Ç–æ —á—Ç–æ-—Ç–æ –∑–∞—à–µ–≤–µ–ª–∏–ª–æ—Å—å –≤ –∫—É—Å—Ç–∞—Ö."
                                              "–í—ã –ø–æ–π–¥–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∏–ª–∏ –ø—Ä–∏–≥–Ω–µ—Ç–µ—Å—å –∏ —Å–ø—è—á–∏—Ç–µ—Å—å?", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '–ü–æ–π—Ç–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å')
        def stay(message):
            bot.send_message(message.chat.id, "–¢–∞–º –æ–∫–∞–∑–∞–ª—Å—è –º–µ–¥–≤–µ–¥—å –∏ –æ–Ω –∑–∞–≥—Ä—ã–∑ –≤–∞—Å. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - schetchik.get(message.chat.id,
                                                                                           0)
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
            start(message)

        @bot.message_handler(func=lambda message: message.text == '–ü—Ä–∏–≥–Ω—É—Ç—å—Å—è –∏ —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è')
        def stay(message):
            bot.send_message(message.chat.id, "–ú–µ–¥–≤–µ–¥—å –≤—ã–ª–µ–∑ –∏–∑ –∫—É—Å—Ç–æ–≤ –∏ –ø—Ä–æ—à–µ–ª –º–∏–º–æ. –í—ã –ø–æ–±–µ–¥–∏–ª–∏")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) * 6
            start(message)

        @bot.message_handler(func=lambda message: message.text == '–û–±–æ–π—Ç–∏')
        def stay(message):
            button_one = types.KeyboardButton("–ü–æ–±–µ–∂–∞—Ç—å –æ—Ç—Ç—É–¥–∞")
            button_two = types.KeyboardButton("–ü—Ä–∏–≥–Ω—É—Ç—å—Å—è –∏ —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è.")
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup.add(button_one, button_two)
            bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –Ω–∞ –ª–∞–≥–µ—Ä—å —Ä–∞–∑–±–æ–π–Ω–∏–∫–æ–≤", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '–ü–æ–±–µ–∂–∞—Ç—å –æ—Ç—Ç—É–¥–∞')
        def stay(message):
            bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–∂–∞–ª–∏ –∏ –æ–Ω–∏ –≤–∞—Å –∑–∞–º–µ—Ç–∏–ª–∏."
                                              "–í—ã –¥–æ–ª–≥–æ –±–µ–∂–∞–ª–∏ –∏ –≤–¥—Ä—É–≥ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –º—è–≥–∫–æ—Å—Ç—å –ø–æ–¥ –Ω–æ–≥–∞–º–∏."
                                              "–ñ–∞–ª—å –Ω–æ —ç—Ç–æ –±—ã–ª–∞ –ª–æ–≤—É—à–∫–∞ —Ä–∞–∑–±–æ–π–Ω–∏–∫–æ–≤. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - schetchik.get(message.chat.id,
                                                                                           0)
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
            start(message)

        @bot.message_handler(func=lambda message: message.text == '–ü—Ä–∏–≥–Ω—É—Ç—å—Å—è –∏ —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è.')
        def stay(message):
            bot.send_message(message.chat.id, "–í—ã –ø—Ä–∏–≥–Ω—É–ª–∏—Å—å. –∫–æ–≥–¥–∞ –æ–Ω–∏ –∑–∞—Å–Ω—É–ª–∏ –≤—ã –æ–≥—Ä–∞–±–∏–ª–∏ –∏—Ö –∏ —Å–ø–æ–∫–æ–π–Ω–æ —É—à–ª–∏ –æ—Ç—Ç—É–¥–∞."
                                              "–í—ã –º–æ–ª–æ–¥–µ—Ü, –≤–µ–¥—å –≤—ã –ø–æ–±–µ–¥–∏–ª–∏ –∏ –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –ø–∞—Å—Ö–∞–ª–∫—É."
                                              "–í–∞–º –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è 1000 –º–æ–Ω–µ—Ç –µ—Å–ª–∏ –æ—Ç–≥–∞–¥–∞–µ—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:")

            button_one = types.KeyboardButton("–°—ã–≥—Ä–∞—Ç—å —Å—É–ø–µ—Ä –∏–≥—Ä—É –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å")
            button_two = types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–±—Ä–∞—Ç—å –≤—ã–π–≥—Ä—ã—à")
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup.add(button_one, button_two)
            bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –Ω–∞ –ª–∞–≥–µ—Ä—å —Ä–∞–∑–±–æ–π–Ω–∏–∫–æ–≤", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–±—Ä–∞—Ç—å –≤—ã–π–≥—Ä—ã—à')
        def stay(message):
            bot.send_message(message.chat.id, "–ñ–∞–ª—å —á—Ç–æ –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ —Å—É–ø–µ—Ä –∏–≥—Ä—É, –Ω–æ –≤—ã –ø–æ–±–µ–¥–∏–ª–∏. "
                                              "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) * 6
            start(message)

        @bot.message_handler(func=lambda message: message.text == '–°—ã–≥—Ä–∞—Ç—å —Å—É–ø–µ—Ä –∏–≥—Ä—É –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å')
        def stay(message):
            bot.send_message(message.chat.id, "–ê –≤—ã —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–∞—à —Ö–æ–¥ –º—ã—Å–ª–µ–π!!!")

            button_one = types.KeyboardButton("2016")
            button_two = types.KeyboardButton("1992")
            button_tree = types.KeyboardButton("1998")
            button_fore = types.KeyboardButton("2003")
            markup = types.ReplyKeyboardMarkup(row_width=4, resize_keyboard=True)
            markup.add(button_one, button_two, button_tree, button_fore)
            bot.send_message(message.chat.id, "–ò —Ç–∞–∫ –≤–æ–ø—Ä–æ—Å: –í –∫–∞–∫–æ–º –≥–æ–¥—É –≤ –ë–µ–ª–æ—Ä—É—Å—Å–∏–∏ –±—ã–ª–∞ –¥–µ–Ω–µ–∂–Ω–∞—è —Ä–µ—Ñ–æ—Ä–º–∞,"
                                              "–∞ –∏–º–µ–Ω–Ω–æ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –¥–µ–Ω—å–≥–∏,"
                                              " –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –ø–æ–ª—å–∑—É–µ–º—Å—è —Å–µ–π—á–∞—Å?", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '2016')
        def stay(message):
            bot.send_message(message.chat.id, "–ò–ò–ò–ò–ò–ò–ò –í–´ –ü–û–ë–ï–î–ò–õ–ò –í –°–£–ü–ï–† –ò–ì–†–ï!!!!!!!!! –í–´ –û–ì–†–û–ú–ù–´–ô –ú–û–õ–û–î–ï–¶!!!!!")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 1000
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) * 6
            start(message)

        @bot.message_handler(func=lambda message: message.text == '1992')
        def stay(message):
            bot.send_message(message.chat.id, "–£–≤—ã, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å —É –≤–∞—Å —Ç–æ—á–Ω–æ –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è.")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - schetchik.get(message.chat.id,
                                                                                           0)
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
            start(message)

        @bot.message_handler(func=lambda message: message.text == '1998')
        def stay(message):
            bot.send_message(message.chat.id, "–£–≤—ã, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å —É –≤–∞—Å —Ç–æ—á–Ω–æ –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è.")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - schetchik.get(message.chat.id,
                                                                                           0)
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
            start(message)

        @bot.message_handler(func=lambda message: message.text == '2003')
        def stay(message):
            bot.send_message(message.chat.id, "–£–≤—ã, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å —É –≤–∞—Å —Ç–æ—á–Ω–æ –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è.")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - schetchik.get(message.chat.id,
                                                                                           0)
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
            start(message)

        @bot.message_handler(func=lambda message: message.text == '–ò–¥—Ç–∏ –Ω–∞ —é–≥')
        def go_south(message):
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            button_stay = types.KeyboardButton("–û—Ç–¥–æ—Ö–Ω—É—Ç—å")
            button_go = types.KeyboardButton("–ü–æ–π—Ç–∏ –¥–∞–ª—å—à–µ")
            markup.add(button_stay, button_go)
            bot.send_message(message.chat.id, "–í—ã –ø–æ—à–ª–∏ –Ω–∞ —é–≥ –∏ –≤—ã—à–ª–∏ –∫ –æ–ø—É—à–∫–µ."
                                              " –ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏–¥—Ç–∏ –∏–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –æ—Ç–¥–æ—Ö–Ω—É—Ç—å?", reply_markup=markup)

        @bot.message_handler(func=lambda message: message.text == '–û—Ç–¥–æ—Ö–Ω—É—Ç—å')
        def stay(message):
            bot.send_message(message.chat.id, "–í—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ –æ–ø—É—à–∫–µ –∏ –≤–∞—Å —É–±–∏–ª –º–µ–¥–≤–µ–¥—å. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) - schetchik.get(message.chat.id,
                                                                                           0)
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) + 100
            start(message)

        @bot.message_handler(func=lambda message: message.text == '–ü–æ–π—Ç–∏ –¥–∞–ª—å—à–µ')
        def continue_going(message):
            bot.send_message(message.chat.id, "–í—ã –ø–æ—à–ª–∏ –¥–∞–ª—å—à–µ –∏ –≤—ã—à–ª–∏ –Ω–∞ —à–æ—Å—Å–µ. –í—ã —Å–ø–∞—Å–µ–Ω—ã! –ü–æ–±–µ–¥–∞!")
            schetchik[message.chat.id] = schetchik.get(message.chat.id, 0) * 6
            start(message)
    elif message.text == 'üìñ Write to the developer':
        webbrowser.open('https://t.me/Why_you_skared')
    elif message.text == '‚Ü©Ô∏è back':
        clikChapter(message)
    elif message.text == '‚Ü©Ô∏è back to menu':
        start(message)
    else:
        bot.send_message(message.chat.id, answers[random.randint(0, 3)])


def clikChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("Money")
    button2 = types.KeyboardButton('‚Ü©Ô∏è back')
    markup.row(button1)
    markup.row(button2)
    bot.send_message(message.chat.id, 'Welcome to the clicker game. 1 click = 1 coin.', reply_markup=markup)
    bot.send_message(message.chat.id, 'Click the button:', reply_markup=markup)


def balanceChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("üëõ See balance")
    button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    markup.row(button1, button2)
    bot.send_message(message.chat.id, 'Balance section.\nChoose one of the options:', reply_markup=markup)


def casinoChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("üîπGame guess the number from 1 to 10")
    button2 = types.KeyboardButton("üîπCasino game")
    button3 = types.KeyboardButton("üîπThe bot will answer any question. Ask questions that require yes/no answers)")
    button4 = types.KeyboardButton("üîπGame guess which cup the ball is under")
    button5 = types.KeyboardButton("üîπA game with a plot similar to real life.")
    button6 = types.KeyboardButton('‚Ü©Ô∏è back to menu')
    markup.row(button1, button2)
    markup.row(button3, button4)
    markup.row(button5, button6)

    bot.send_message(message.chat.id, 'A list of casino options is available to you:', reply_markup=markup)


bot.polling(none_stop=True)
